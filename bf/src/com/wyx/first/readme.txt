Thread类的对象中保存了一些属性信息能够帮助我们来辨别每一个线程，知道它的状态，调整控制其优先级。 这些属性是：

ID: 每个线程的独特标识。
Name: 线程的名称。
Status: 线程的状态。在Java中，线程只能有这6种中的一种状态：
new, runnable, blocked, waiting, time waiting, 或 terminated.
2、线程的中断
一个多个线程在执行的Java程序，只有当其全部的线程执行结束时(更具体的说,是所有非守护线程结束
或者某个线程调用System.exit()方法的时候),它才会结束运行。
有时，你需要为了终止程序而结束一个线程，或者当程序的用户想要取消某个Thread对象正在做的任务。

Java提供中断机制来通知线程表明我们想要结束它。中断机制的特性是线程需要检查是否被中断，
而且还可以决定是否响应结束的请求。所以，线程可以忽略中断请求并且继续运行。
3、Java有一种特别的线程叫做守护线程。这种线程的优先级非常低，
    通常在程序里没有其他线程运行时才会执行它。当守护线程是程序里唯一在运行的线程时,
    JVM会结束守护线程并终止程序。守护线程通常用于在同一程序里给普通线程(也叫使用者线程)提供服务。
    它们通常无限循环的等待服务请求或执行线程任务。它们不能做重要的任务,
    因为我们不知道什么时候会被分配到CPU时间片,并且只要没有其他线程在运行,它们可能随时被终止。
    JAVA中最典型的这种类型代表就是垃圾回收器。